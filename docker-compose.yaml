x-airflow-common:
  &airflow-common
  image: apache/airflow:3.0.2
  environment:
    AIRFLOW__CORE__LOAD_EXAMPLES: 'true'
    AIRFLOW__CORE__EXECUTOR: LocalExecutor
    AIRFLOW__CORE__AUTH_MANAGER: airflow.providers.fab.auth_manager.fab_auth_manager.FabAuthManager
    AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
    AIRFLOW__CORE__FERNET_KEY: '' # muss ausgef√ºllt werden
    AIRFLOW__API__AUTH_BACKEND: "airflow.api.auth.backend.basic_auth"
    #AIRFLOW__CELERY__BROKER_URL: "redis://redis:6379/0"
    AIRFLOW__CORE__EXECUTION_API_SERVER_URL: 'http://localhost:8080/execution/'
    AIRFLOW__SCHEDULER__ENABLE_HEALTH_CHECK: 'true'
    _PIP_ADDITIONAL_REQUIREMENTS: ${_PIP_ADDITIONAL_REQUIREMENTS:-}
    AIRFLOW_CONFIG: '/opt/airflow/config/airflow.cfg'

  volumes:
    - ./dags:/opt/airflow/dags
    - ./logs:/opt/airflow/logs
    - ./plugins:/opt/airflow/plugins
    - ./config:/opt/airflow/config

  user: "${AIRFLOW_UID:-50000}:${AIRFLOW_GID:-50000}"

  restart: always

  depends_on:
    postgres:
      condition: service_healthy

    redis:
      condition: service_healthy

services:

  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U airflow -d airflow"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: always
    volumes:
      - postgres_data:/var/lib/postgres/data

  redis:
    image: redis:7
    healthcheck:
      test: ["CMD", "redis-cli", "PING"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: always
    volumes:
      - redis_data:/data

  airflow-init:
    <<: *airflow-common
    command: airflow db migrate
    restart: "no"

  airflow-api:
    <<: *airflow-common
    command: airflow api-server
    ports:
      - "8080:8080"

  airflow-scheduler:
    <<: *airflow-common
    command: airflow scheduler

volumes:
  postgres_data:
  redis_data:
